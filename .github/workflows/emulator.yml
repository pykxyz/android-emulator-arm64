name: Build Emulator
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: deps
        run: |
          sudo apt-get update && sudo apt-get install -y python3 python-is-python3 crossbuild-essential-arm64 mesa-common-dev ccache repo git llvm
          pip3 install absl-py urlfetch
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          ccache -o max_size=10G
          ccache -o hard_link=true
      - name: download
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          repo init -u https://android.googlesource.com/platform/manifest -b emu-master-dev --depth=1
          repo sync -vcj 12
      - name: ccache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/ccache
          key: cache-${{ github.sha }}
          restore-keys: cache-
      - name: build
        run: |
          sed -i 's/kSigStackSize = std::max/kSigStackSize = std::max<unsigned>/g' external/google-breakpad/src/client/linux/handler/exception_handler.cc
          sed -i 's/constexpr size_t stack_size = MINSIGSTKSZ/static size_t stack_size = MINSIGSTKSZ/g' external/qemu/android/third_party/crashpad/client/crashpad_client_linux_test.cc
          cd external/qemu
          ccache -z
          python android/build/python/cmake.py --noqtwebengine --noshowprefixforinfo --target linux_aarch64 --config release --strip --ccache auto --minbuild --no-tests
          ccache -s
          find objs/distribution/emulator -type f -exec sh -c "file {} | grep -Pi ': elf (32|64)-bit' > /dev/null" \; -print | xargs llvm-strip --strip-all
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: emulator
          path: |
            external/qemu/objs/distribution/emulator/*
